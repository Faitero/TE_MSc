dev.off()
legend("topright",
legend = unique(as.numeric(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3)),
lty= 1,
lwd = 4,
cex=1
)
,
)
)
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
# coords <- locator(1) # now click on the graph where you want the legend
# legend(coords,
#        legend = unique(Divergence_clustered$alu_substitutions_hg19_t),
#        col = unique(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),
#        lty= 1,
#        lwd = 5,
#        cex=.7
# )
legend("topright",
legend = unique(as.numeric(aluFanily_clustered$alu_element_hg19_t)),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3)),
lty= 1,
lwd = 4,
cex=1,
)
dev.off()
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
# coords <- locator(1) # now click on the graph where you want the legend
# legend(coords,
#        legend = unique(Divergence_clustered$alu_substitutions_hg19_t),
#        col = unique(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),
#        lty= 1,
#        lwd = 5,
#        cex=.7
# )
legend("topright",
legend = unique(as.numeric(aluFanily_clustered$alu_element_hg19_t)),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3)),
lty= 1,
lwd = 4,
cex=1
)
dev.off()
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
legend("topright",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3)),
lty= 1,
lwd = 4,
cex=1
)
legend("topright",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
legend("topright",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
# coords <- locator(1) # now click on the graph where you want the legend
# legend(coords,
#        legend = unique(Divergence_clustered$alu_substitutions_hg19_t),
#        col = unique(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),
#        lty= 1,
#        lwd = 5,
#        cex=.7
# )
legend("topright",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
dev.off()
legend("bottonleft",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
legend("bottomleft",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
legend("bottomleft",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
# coords <- locator(1) # now click on the graph where you want the legend
# legend(coords,
#        legend = unique(Divergence_clustered$alu_substitutions_hg19_t),
#        col = unique(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),
#        lty= 1,
#        lwd = 5,
#        cex=.7
# )
legend("bottomleft",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
dev.off()
pdf("3SS_clustered_by_Utrack.pdf", width=20, height=13)
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
hm_3ss_by_U
system(paste0("montage -geometry 100% -tile 2x2 U_track.pdf 3SS_clustered_by_Utrack.pdf ",experiment,"combined.pdf"))
experiment <- "Clustered_by_alu_family_Ulenght_"
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
# coords <- locator(1) # now click on the graph where you want the legend
# legend(coords,
#        legend = unique(Divergence_clustered$alu_substitutions_hg19_t),
#        col = unique(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),
#        lty= 1,
#        lwd = 5,
#        cex=.7
# )
legend("bottomleft",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
dev.off()
hm_U
pdf("3SS_clustered_by_Utrack.pdf", width=20, height=13)
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
hm_3ss_by_U
system(paste0("montage -geometry 100% -tile 2x2 U_track.pdf 3SS_clustered_by_Utrack.pdf ",experiment,"combined.pdf"))
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
pdf("3SS_clustered_by_Utrack.pdf", width=20, height=13)
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3))), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
pdf("3SS_clustered_by_Utrack.pdf", width=20, height=13)
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3))), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
pdf("U_track.pdf", width=20, height=13)
hm_U <- heatmap.2(mat_data_WU,
#cellnote = mat_data,  # same data set for cell labels
main = "U track clustered by Alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_U,       # use on color palette defined earlier
breaks=col_breaks_U,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(aluFanily_clustered$col3)), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
# coords <- locator(1) # now click on the graph where you want the legend
# legend(coords,
#        legend = unique(Divergence_clustered$alu_substitutions_hg19_t),
#        col = unique(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),
#        lty= 1,
#        lwd = 5,
#        cex=.7
# )
legend("bottomleft",
legend = unique(aluFanily_clustered$alu_element_hg19_t),
col = unique(as.numeric(as.numeric(aluFanily_clustered$col3))),
lty= 1,
lwd = 4,
cex=1
)
dev.off()
hm_U
pdf("3SS_clustered_by_Utrack.pdf", width=20, height=13)
hm_3ss_by_U<- heatmap.2(mat_data_3ss,
#cellnote = mat_data,  # same data set for cell labels
main = "3SS clustered by alu family and U track lenght", # heat map title
#notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette_3,       # use on color palette defined earlier
breaks=col_breaks_3,    # enable color transition at specified limits
dendrogram=NULL,     # only draw a row dendrogram
RowSideColors=as.character(as.numeric(as.numeric(aluFanily_clustered$col3))), ## color the names of the rows
#colRow= as.character(as.numeric(Divergence_clustered$alu_substitutions_hg19_t)),        ## color categorize rows
Rowv=FALSE,
Colv=FALSE)            # turn off column clustering
dev.off()
hm_3ss_by_U
system(paste0("montage -geometry 100% -tile 2x2 U_track.pdf 3SS_clustered_by_Utrack.pdf ",experiment,"combined.pdf"))
setwd('/home/igor/Dropbox (UCL-MN Team)/hnRNPC.NMD (1).manuscript/Alus_primates_evolution/Data/Random_alus')
hg19 <- read.table(("Random_alu_exons_3SS_distance_hg19_hg19.tab"), sep="\t",  header = TRUE)
hg19$region <- "hg19"
hg38 <- read.table(("Random_alu_exons_3SS_distance_hg19_hg38.tab"), sep="\t",  header = TRUE)
hg38$region <- "hg38"
panPan1<- read.table("Random_alu_exons_3SS_distance_hg38_panPan1.tab", sep="\t", header = TRUE)
panPan1$region <- "panPan1"
panTro4<- read.table("Random_alu_exons_3SS_distance_hg38_panTro4.tab", sep="\t", header = TRUE)
panTro4$region <- "panTro4"
rheMac3<- read.table("Random_alu_exons_3SS_distance_hg38_rheMac3.tab", sep="\t",  header = TRUE)
rheMac3$region <- "rheMac3"
tarSyr2<- read.table("Random_alu_exons_3SS_distance_hg38_tarSyr2.tab", sep="\t",  header = TRUE)
tarSyr2$region <- "tarSyr2"
otoGar1<- read.table("Random_alu_exons_3SS_distance_hg19_otoGar1.tab", sep="\t",  header = TRUE)
otoGar1$region <- "otoGar1"
calJac3<- read.table("Random_alu_exons_3SS_distance_hg19_calJac3.tab", sep="\t",  header = TRUE)
calJac3$region <- "calJac3"
micMur1<- read.table("Random_alu_exons_3SS_distance_hg19_micMur1.tab", sep="\t",  header = TRUE)
micMur1$region <- "micMur1"
nomLeu1<- read.table("Random_alu_exons_3SS_distance_hg19_nomLeu1.tab", sep="\t",  header = TRUE)
nomLeu1$region <- "nomLeu1"
papHam1<- read.table("Random_alu_exons_3SS_distance_hg19_papHam1.tab", sep="\t",  header = TRUE)
papHam1$region <- "papHam1"
tupBel1<- read.table("Random_alu_exons_3SS_distance_hg19_tupBel1.tab", sep="\t",  header = TRUE)
tupBel1$region <- "tupBel1"
whole_random <- rbind(hg19, hg38, panPan1, panTro4, rheMac3, tarSyr2, otoGar1, calJac3, micMur1, nomLeu1, papHam1, tupBel1)
write.table(whole_final, file = "whole_final_random.bed", sep = "\t", na = "NA", row.names = FALSE, col.names = TRUE)
names(hg19)<- c("chr_hg19",  "start_hg19",  "end_hg19",  "aluexon",  "position_hg19",	"strand_hg19",	"distance_hg19",	"3SSS_hg19",	"WU_hg19",	"U1_hg19",	"U2_hg19", "region_hg19")
names(hg38)<- c("chr_hg38",  "start_hg38",	"end_hg38",	"aluexon",	"position_hg38",	"strand_hg38",	"distance_hg38",	"3SSS_hg38",	"WU_hg38",	"U1_hg38",	"U2_hg38", "region_hg38")
names(panPan1)<- c("chr_panPan1",	"start_panPan1",	"end_panPan1",	"aluexon",	"position_panPan1",	"strand_panPan1",	"distance_panPan1",	"3SSS_panPan1",	"WU_panPan1",	"U1_panPan1",	"U2_panPan1", "region_panPan1")
names(panTro4)<- c("chr_panTro4",	"start_panTro4",	"end_panTro4",	"aluexon",	"position_panTro4",	"strand_panTro4",	"distance_panTro4",	"3SSS_panTro4",	"WU_panTro4",	"U1_panTro4",	"U2_panTro4", "region_panTro4")
names(rheMac3)<- c("chr_rheMac3",	"start_rheMac3",	"end_rheMac3",	"aluexon",	"position_rheMac3",	"strand_rheMac3",	"distance_rheMac3",	"3SSS_rheMac3",	"WU_rheMac3",	"U1_rheMac3",	"U2_rheMac3", "region_rheMac3")
names(tarSyr2)<- c("chr_tarSyr2",	"start_tarSyr2",	"end_tarSyr2",	"aluexon",	"position_tarSyr2",	"strand_tarSyr2",	"distance_tarSyr2",	"3SSS_tarSyr2",	"WU_tarSyr2",	"U1_tarSyr2",	"U2_tarSyr2", "region_tarSyr2")
names(otoGar1)<- c("chr_otoGar1",	"start_otoGar1",	"end_otoGar1",	"aluexon",	"position_otoGar1",	"strand_otoGar1",	"distance_otoGar1",	"3SSS_otoGar1",	"WU_otoGar1",	"U1_otoGar1",	"U2_otoGar1", "region_otoGar1")
names(calJac3)<- c("chr_calJac3",	"start_calJac3",	"end_calJac3",	"aluexon",	"position_calJac3",	"strand_calJac3",	"distance_calJac3",	"3SSS_calJac3",	"WU_calJac3",	"U1_calJac3",	"U2_calJac3", "region_calJac3")
names(micMur1)<- c("chr_micMur1",	"start_micMur1",	"end_micMur1",	"aluexon",	"position_micMur1",	"strand_micMur1",	"distance_micMur1",	"3SSS_micMur1",	"WU_micMur1",	"U1_micMur1",	"U2_micMur1", "region_micMur1")
names(nomLeu1)<- c("chr_nomLeu1",	"start_nomLeu1",	"end_nomLeu1",	"aluexon",	"position_nomLeu1",	"strand_nomLeu1",	"distance_nomLeu1",	"3SSS_nomLeu1",	"WU_nomLeu1",	"U1_nomLeu1",	"U2_nomLeu1", "region_nomLeu1")
names(papHam1)<- c("chr_papHam1",	"start_papHam1",	"end_papHam1",	"aluexon",	"position_papHam1",	"strand_papHam1",	"distance_papHam1",	"3SSS_papHam1",	"WU_papHam1",	"U1_papHam1",	"U2_papHam1", "region_papHam1")
names(tupBel1)<- c("chr_tupBel1",	"start_tupBel1",	"end_tupBel1",	"aluexon",	"position_tupBel1",	"strand_tupBel1",	"distance_tupBel1",	"3SSS_tupBel1",	"WU_tupBel1",	"U1_tupBel1",	"U2_tupBel1", "region_tupBel1")
genome_list <-list(hg19, hg38, panPan1, panTro4, rheMac3, tarSyr2, otoGar1, calJac3, micMur1, nomLeu1, papHam1, tupBel1)
total_random <- read.table("../All_Aluexons_3SS_hg19_DQ.bed", sep="\t")
colnames(total_random)<- c("chr_hg19_t",  "start_hg19_t",	"end_hg19_t",	"aluexon",	"position_hg19_t",	"strand_hg19_t",	"distance_hg19_t",	"chr_alu_hg19_t",	"start_alu_hg19_t", "end_alu_hg19_t", "alu_element_hg19_t", "alu_substitutions_hg19_t",	"alu_strand_hg19_t",
"number")
total_random$number<-NULL
library(plyr)
for (genome in genome_list) {
total_random <- merge.data.frame(total_random, genome, by="aluexon", all=TRUE)
#quartile <- median.quartile(genome$region)
#p_meds <- ddply(genome, .(region), summarise, med = median(WU))
}
whole$type <- as.factor("real")
whole_random$type <- as.factor("random")
whole_final<- rbind(whole, whole_random)
whole_final$dist <- 0
whole_final$dist[whole_final$distance_to_alu>70] <- "UPP70"
whole_final$dist[whole_final$distance_to_alu<=70] <- "LOW70"
whole_final$dist <- as.factor(whole_final$dist)
head(whole_final)
quartile <- median.quartile(whole_final$region)
whole_final <- whole_final[complete.cases(whole[,9-11]),]    ## Remove NA in columns 9, 10 and 11 (WU, U1, U2)
whole_final$region <- as.factor(whole_final$region)    ## Convert region to factor
dataF_distance_whole <- subset(whole_final, select=c("aluexon", "WU", "region", "type", "dist"))
dataF_distance_whole$alu_region <- "whole"
names(dataF_distance_whole) <- c("aluexon", "Ulenght", "region", "type", "dist", "alu_region")
dataF_distance_U1 <- subset(whole_final, select=c("aluexon", "U1", "region", "type", "dist"))
dataF_distance_U1$alu_region <- "U1"
names(dataF_distance_U1) <- c("aluexon", "Ulenght", "region", "type", "dist", "alu_region")
dataF_distance_U2 <- subset(whole_final, select=c("aluexon", "U2", "region", "type", "dist"))
dataF_distance_U2$alu_region <- "U2"
names(dataF_distance_U2) <- c("aluexon", "Ulenght", "region", "type", "dist", "alu_region")
dataF_distance <- rbind(dataF_distance_whole, dataF_distance_U1, dataF_distance_U2)
dataF_distance$alu_region <- as.factor(dataF_distance$alu_region)
dataF_distance$aluexon <- sapply(dataF_distance$aluexon, as.character)
dataF_distance$total <- with(dataF_distance, interaction(alu_region, dist, type))
dataF_distance<- dataF_distance[complete.cases(dataF_distance[,2]),]    ## Remove NA in columns 2 Ulenght
sapply(dataF_distance, class)
p_meds <- ddply(dataF_distance, .(region, total), summarise, med = mean(Ulenght))
p_meds
a<-  ggplot(dataF_distance, aes(factor(region), Ulenght), alpha = 1, colour = "black") +
geom_boxplot() +
#scale_y_log10() +
theme_bw() +
ggtitle("median quartile 25%, 50%, 75%") +
xlab("") +
ylab("length (nt)") +
theme(text=element_text(size=12),axis.text=element_text(size=12), axis.title=element_text(size=12,face="plain")) +
scale_x_discrete(limits=c("hg19", "panTro4", "panPan1", "nomLeu1", "papHam1", "rheMac3", "calJac3", "tarSyr2", "micMur1", "otoGar1", "tupBel1"))
a
all_table <- data.frame(table(whole_final_table$region))
all_table
library(plyr)
### quartile <- median.quartile(clusters$length)     Nejc what its clusters
dodge <- position_dodge(width = 0.9)
ALL<- ggplot(dataF_distance, aes(factor(region), Ulenght, colour = total), alpha = 1, width = 0.5) +
#geom_violin(position = dodge) +
geom_boxplot(width=1.1, position = dodge, alpha = 1, outlier.shape = NA ) +    ### uncoment if you need the boxplot inside
theme_bw() +
scale_y_continuous(limits = c(0, 23)) +
#scale_y_log10() +
ggtitle("U stretches") +
xlab("") +
ylab("U stretches (nt)") +
scale_colour_manual(values=c("#00441b", "#006d2c", "#238b45", "#0570b0", "#3690c0", "#74a9cf", "#810f7c", "#88419d", "#8c6bb1"))+
#scale_colour_manual(values=c("#242B38","#2165E8","#2CA3B5")) +
theme(text=element_text(size=12),axis.text=element_text(size=12), axis.title=element_text(size=12,face="plain")) +
geom_text(data = p_meds, aes(x = region, y = med, label = format(med, digits=2)), size = 2.5, vjust = -1.5, position = dodge) +
scale_x_discrete(limits=c("hg19", "panTro4", "panPan1", "nomLeu1", "papHam1", "rheMac3", "calJac3", "tarSyr2", "micMur1", "otoGar1", "tupBel1"))
ALL
dev.off()
a<-  ggplot(dataF_distance, aes(factor(region), Ulenght), alpha = 1, colour = "black") +
geom_boxplot() +
#scale_y_log10() +
theme_bw() +
ggtitle("median quartile 25%, 50%, 75%") +
xlab("") +
ylab("length (nt)") +
theme(text=element_text(size=12),axis.text=element_text(size=12), axis.title=element_text(size=12,face="plain")) +
scale_x_discrete(limits=c("hg19", "panTro4", "panPan1", "nomLeu1", "papHam1", "rheMac3", "calJac3", "tarSyr2", "micMur1", "otoGar1", "tupBel1"))
a
all_table <- data.frame(table(whole_final_table$region))
all_table
library(plyr)
### quartile <- median.quartile(clusters$length)     Nejc what its clusters
dodge <- position_dodge(width = 0.9)
ALL<- ggplot(dataF_distance, aes(factor(region), Ulenght, colour = total), alpha = 1, width = 0.5) +
#geom_violin(position = dodge) +
geom_boxplot(width=1.1, position = dodge, alpha = 1, outlier.shape = NA ) +    ### uncoment if you need the boxplot inside
theme_bw() +
scale_y_continuous(limits = c(0, 23)) +
#scale_y_log10() +
ggtitle("U stretches") +
xlab("") +
ylab("U stretches (nt)") +
scale_colour_manual(values=c("#00441b", "#006d2c", "#238b45", "#0570b0", "#3690c0", "#74a9cf", "#810f7c", "#88419d", "#8c6bb1"))+
#scale_colour_manual(values=c("#242B38","#2165E8","#2CA3B5")) +
theme(text=element_text(size=12),axis.text=element_text(size=12), axis.title=element_text(size=12,face="plain")) +
geom_text(data = p_meds, aes(x = region, y = med, label = format(med, digits=2)), size = 2.5, vjust = -1.5, position = dodge) +
scale_x_discrete(limits=c("hg19", "panTro4", "panPan1", "nomLeu1", "papHam1", "rheMac3", "calJac3", "tarSyr2", "micMur1", "otoGar1", "tupBel1"))
ALL
